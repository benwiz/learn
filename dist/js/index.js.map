{"version":3,"sources":["webpack:///webpack/bootstrap da0135d1b10a4f14be0a","webpack:///./src/js/index.js"],"names":["BrainLSTMTimeStep","ROCK","PAPER","SCISSORS","HISTORY","MODEL","AGENT_ATTACK","ROCK_EMOJI","PAPER_EMOJI","SCISSORS_EMOJI","SMILEY_EMOJI","NEUTRAL_EMOJI","ROBOT_EMOJI","sleep","Promise","setTimeout","resolve","ms","updateModel","history","model","train","predict","prediction","run","updateAgentCardWithThinking","p","document","querySelector","innerHTML","updateAgentCardWithReady","updateAgentCardWithAttack","attack","string","updatePlayerCardWithWaiting","playerDiv","buttons","querySelectorAll","forEach","button","setAttribute","updatePlayerCardWithOptions","removeAttribute","updatePlayerCardWithAttack","emoji","updateHistory","push","determineWinner","playerAttack","agentAttack","result","updateScoreCard","winner","pickAgentAttack","onPlayerPicksAttack","event","parseInt","target","value","waitDuration","start","Date","duration","console","log","onDomContentLoaded","length","addEventListener","playerAttackButtons"],"mappings":"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","file":"./dist/js/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da0135d1b10a4f14be0a","// import * as Linear from './linear';\n// import * as LSTM from './lstm';\nimport * as BrainLSTMTimeStep from './brainLSTMTimeStep';\n\nconst ROCK = 0;\nconst PAPER = 1;\nconst SCISSORS = 2;\n\nconst HISTORY = [];\nlet MODEL = null;\nlet AGENT_ATTACK = -1;\n\nconst ROCK_EMOJI = 'ðŸ’Ž';\nconst PAPER_EMOJI = 'ðŸ“°';\nconst SCISSORS_EMOJI = 'âœ‚';\nconst SMILEY_EMOJI = 'ðŸ™‚';\nconst NEUTRAL_EMOJI = 'â­•';\nconst ROBOT_EMOJI = 'ðŸ¤–';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// Although Brain.js isn't async, future Tensorflow stuff will be. So make the function async.\nconst updateModel = async (history) => {\n  const model = BrainLSTMTimeStep.train(MODEL, history);\n  MODEL = model;\n  return model;\n};\n\n// Although Brain.js isn't async, future Tensorflow stuff might be. So make the function async.\nconst predict = async (model, history) => {\n  const prediction = BrainLSTMTimeStep.run(model, history);\n  return prediction;\n};\n\nconst updateAgentCardWithThinking = () => {\n  const p = document.querySelector('#agent p');\n  p.innerHTML = 'Thinking...';\n};\n\nconst updateAgentCardWithReady = () => {\n  const p = document.querySelector('#agent p');\n  p.innerHTML = 'Ready.';\n};\n\nconst updateAgentCardWithAttack = (attack) => {\n  let string;\n  if (attack === ROCK) string = ROCK_EMOJI;\n  else if (attack === PAPER) string = PAPER_EMOJI;\n  else string = SCISSORS_EMOJI;\n\n  const p = document.querySelector('#agent p');\n  p.innerHTML = string;\n};\n\nconst updatePlayerCardWithWaiting = () => {\n  const playerDiv = document.querySelector('#player');\n\n  // Show buttons\n  const buttons = playerDiv.querySelectorAll('button');\n  buttons.forEach((button) => {\n    button.setAttribute('hidden', null);\n  });\n\n  // Hide selection\n  const p = playerDiv.querySelector('p');\n  p.setAttribute('hidden', null);\n};\n\nconst updatePlayerCardWithOptions = () => {\n  const playerDiv = document.querySelector('#player');\n\n  // Show buttons\n  const buttons = playerDiv.querySelectorAll('button');\n  buttons.forEach((button) => {\n    button.removeAttribute('hidden');\n  });\n\n  // Hide selection\n  const p = playerDiv.querySelector('p');\n  p.setAttribute('hidden', null);\n};\n\nconst updatePlayerCardWithAttack = (attack) => {\n  const playerDiv = document.querySelector('#player');\n\n  // Hide buttons\n  const buttons = playerDiv.querySelectorAll('button');\n  buttons.forEach((button) => {\n    button.setAttribute('hidden', null);\n  });\n\n  // Show selection\n  const p = playerDiv.querySelector('p');\n  let emoji;\n  if (attack === ROCK) emoji = ROCK_EMOJI;\n  else if (attack === PAPER) emoji = PAPER_EMOJI;\n  else emoji = SCISSORS_EMOJI;\n  p.innerHTML = emoji;\n  p.removeAttribute('hidden');\n};\n\nconst updateHistory = (attack) => {\n  HISTORY.push(attack);\n  // TODO: add attack to cookie\n};\n\nconst determineWinner = (playerAttack, agentAttack) => {\n  let result;\n  if (playerAttack === ROCK && agentAttack === ROCK) result = null;\n  else if (playerAttack === ROCK && agentAttack === PAPER) result = 'agent';\n  else if (playerAttack === ROCK && agentAttack === SCISSORS) result = 'player';\n  else if (playerAttack === PAPER && agentAttack === ROCK) result = 'player';\n  else if (playerAttack === PAPER && agentAttack === PAPER) result = null;\n  else if (playerAttack === PAPER && agentAttack === SCISSORS) result = 'agent';\n  else if (playerAttack === SCISSORS && agentAttack === ROCK) result = 'agent';\n  else if (playerAttack === SCISSORS && agentAttack === PAPER) result = 'player';\n  else result = null; // SCISSORS and SCISSORS\n\n  return result;\n};\n\nconst updateScoreCard = (winner) => {\n  let emoji = NEUTRAL_EMOJI;\n  if (winner === 'player') {\n    emoji = SMILEY_EMOJI;\n  } else if (winner === 'agent') {\n    emoji = ROBOT_EMOJI;\n  }\n\n  const p = document.querySelector('#score p');\n  p.innerHTML += emoji;\n};\n\nconst pickAgentAttack = async (model, history) => {\n  const prediction = await predict(model, history);\n\n  if (prediction === ROCK) AGENT_ATTACK = PAPER;\n  else if (prediction === PAPER) AGENT_ATTACK = SCISSORS;\n  else AGENT_ATTACK = ROCK;\n};\n\n//\n// Main functions are the following two event handlers\n//\n\nconst onPlayerPicksAttack = async (event) => {\n  const playerAttack = parseInt(event.target.value);\n\n  // Update agent card with its selected attack\n  updateAgentCardWithAttack(AGENT_ATTACK);\n\n  // Update player card with selected attack\n  updatePlayerCardWithAttack(playerAttack);\n\n  // Record the attack in global HISTORY array\n  updateHistory(playerAttack);\n\n  // Identify the winner\n  const winner = determineWinner(playerAttack, AGENT_ATTACK);\n\n  // Update the score card UI\n  updateScoreCard(winner);\n\n  // Wait some time for the user to read the result of the game.\n  // TODO: Allow a click to exit this early.\n  let waitDuration = 300;\n  await sleep(waitDuration);\n\n  //\n  // Next Round starting\n  //\n\n  // Update player UI so the UX is a little nicer\n  updatePlayerCardWithWaiting();\n\n  // Update agent UI to signal that the agent is thinking\n  updateAgentCardWithThinking();\n\n  // Update the model and select attack\n  // TODO: Can I try to do this processing during the earlier `sleep`?\n  const start = new Date();\n  const model = await updateModel(HISTORY);\n  await pickAgentAttack(model, HISTORY);\n  const duration = new Date() - start;\n  console.log(duration);\n\n  // Wait some time so the `thinking...` status is readable\n  waitDuration = 200 - duration;\n  await sleep(waitDuration);\n\n  // Update player and/or agent UI to signal that the agent is ready and the player must\n  // pick his next action.\n  updateAgentCardWithReady();\n  updatePlayerCardWithOptions();\n};\n\nconst onDomContentLoaded = async () => {\n  // TODO: Load history from cookie if there is a cookie\n\n  // Update player and/or agent UI to signal that the agent is thinking\n  updateAgentCardWithThinking();\n\n  if (HISTORY.length === 0) {\n    // TODO: Since we have no history, randomly select ROCK, PAPER, or SCISSORS.\n    // For now, hardcode choice.\n    AGENT_ATTACK = PAPER;\n  } else {\n    // TODO: Load model from cookie\n\n    // Update the model and pick the agent's attack\n    const model = await updateModel(HISTORY);\n    await pickAgentAttack(model, HISTORY);\n  }\n\n  // Update player and/or agent UI to signal that the agent is ready and the player must\n  // pick his next action.\n  updateAgentCardWithReady();\n  updatePlayerCardWithOptions();\n};\n\n//\n// Event listeners trigger the above function\n//\n\n// When DOM is loaded\ndocument.addEventListener('DOMContentLoaded', onDomContentLoaded);\n\n// Attack button events\nconst playerAttackButtons = document.querySelectorAll('#player button');\nplayerAttackButtons.forEach((button) => {\n  button.addEventListener('click', onPlayerPicksAttack);\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/index.js"],"sourceRoot":""}